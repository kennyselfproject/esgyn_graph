digraph hasjoin {
   EMPTY -> READ_OUTER
   EMPTY -> READ_INNER
   EMPTY -> DONE

   FLUSH_CLUSTER0 [ label="FLUSH_CLUSTER" ]
   FLUSH_CLUSTER1 [ label="FLUSH_CLUSTER" ]
   FLUSH_CLUSTER2 [ label="FLUSH_CLUSTER" ]
   FLUSH_CLUSTER3 [ label="FLUSH_CLUSTER" ]

   PROBE0 [ label="PROBE" ]
   PROBE1 [ label="PROBE" ]

   READ_BUFFER -> READ_OUTER_CLUSTER

   READ_OUTER_CLUSTER -> RETURN_RIGHT_ROWS
   READ_OUTER_CLUSTER -> READ_INNER_CLUSTER
   READ_OUTER_CLUSTER -> PROBE0
   READ_OUTER_CLUSTER -> READ_BUFFER
   PROBE0 -> READ_OUTER_CLUSTER

   RETURN_RIGHT_ROWS -> READ_INNER_CLUSTER
   RETURN_RIGHT_ROWS -> END_PHASE2

   READ_INNER -> END_PHASE1
   READ_INNER -> FLUSH_CLUSTER0
   FLUSH_CLUSTER0 -> READ_INNER

   READ_OUTER -> RETURN_RIGHT_ROWS
   READ_OUTER -> FLUSH_CLUSTER3
   READ_OUTER -> END_PHASE2
   FLUSH_CLUSTER3 -> READ_OUTER
   READ_OUTER -> PROBE1
   PROBE1 -> READ_OUTER

   not_EMPTY [ shape=plaintext ]
   not_EMPTY -> CANCELED
   not_EMPTY -> HASHJ_CANCEL_AFTER_INNER

   HASHJ_CANCEL_AFTER_INNER -> END_PHASE1

   CANCELED -> DONE

   READ_INNER_CLUSTER -> READ_BUFFER

   END_PHASE1 -> CANCELED [ label="oldState() == CANCEL_AFTER_INNER" ]
   END_PHASE1 -> READ_OUTER
   END_PHASE1 -> FLUSH_CLUSTER1
   FLUSH_CLUSTER1 -> END_PHASE1

   END_PHASE2 -> DONE
   END_PHASE2 -> FLUSH_CLUSTER2
   END_PHASE2 -> READ_INNER_CLUSTER
   FLUSH_CLUSTER2 -> END_PHASE2
}
